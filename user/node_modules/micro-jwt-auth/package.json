{
  "_args": [
    [
      {
        "raw": "micro-jwt-auth@^1.6.0",
        "scope": null,
        "escapedName": "micro-jwt-auth",
        "name": "micro-jwt-auth",
        "rawSpec": "^1.6.0",
        "spec": ">=1.6.0 <2.0.0",
        "type": "range"
      },
      "/home/software1/microservices/user"
    ]
  ],
  "_from": "micro-jwt-auth@>=1.6.0 <2.0.0",
  "_id": "micro-jwt-auth@1.6.0",
  "_inCache": true,
  "_location": "/micro-jwt-auth",
  "_nodeVersion": "7.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/micro-jwt-auth-1.6.0.tgz_1493542966276_0.5404882626608014"
  },
  "_npmUser": {
    "name": "kandros",
    "email": "kandros5591@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "micro-jwt-auth@^1.6.0",
    "scope": null,
    "escapedName": "micro-jwt-auth",
    "name": "micro-jwt-auth",
    "rawSpec": "^1.6.0",
    "spec": ">=1.6.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/micro-jwt-auth/-/micro-jwt-auth-1.6.0.tgz",
  "_shasum": "62d84cabdc2724626d03e13ee8dad4c675929f5e",
  "_shrinkwrap": null,
  "_spec": "micro-jwt-auth@^1.6.0",
  "_where": "/home/software1/microservices/user",
  "author": {
    "name": "jaga santagostino",
    "email": "jagasantagostino@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/kandros/micro-jwt-auth/issues"
  },
  "dependencies": {
    "jsonwebtoken": "7.3.0"
  },
  "description": "jwt authencication wrapper for zeit/micro",
  "devDependencies": {
    "jest": "^18.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "62d84cabdc2724626d03e13ee8dad4c675929f5e",
    "tarball": "https://registry.npmjs.org/micro-jwt-auth/-/micro-jwt-auth-1.6.0.tgz"
  },
  "gitHead": "656dc4fa980750e7cfb206c162f26091b2f36156",
  "homepage": "https://github.com/kandros/micro-jwt-auth#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "kandros",
      "email": "kandros5591@gmail.com"
    }
  ],
  "name": "micro-jwt-auth",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/kandros/micro-jwt-auth.svg?branch=master)](https://travis-ci.org/kandros/micro-jwt-auth)\n[![npm](https://img.shields.io/npm/v/micro-jwt-auth.svg)](https://www.npmjs.com/package/micro-jwt-auth)\n# micro-jwt-auth\n[json web token(jwt)](https://jwt.io/introduction/) authorization wrapper for [Micro](https://github.com/zeit/micro)\n\n> An `Authorization` header with value `Bearer MY_TOKEN_HERE` is expected\n\n## examples\n\n#### with no other wrappers\n```javascript\n'use strict'\n\nconst jwtAuth = require('micro-jwt-auth')\n\n/*\n    if Authorization Bearer is not present or not valid, return 401\n*/\n\nmodule.exports = jwtAuth('my_jwt_secret')(async(req, res) => {\n  return `Ciaone ${req.jwt.username}!`\n})\n```\n\n#### with multiple wrappers\n\n```javascript\n'use strict'\n\nconst jwtAuth = require('micro-jwt-auth')\n\nconst compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)))\n\nconst handle = async(req, res) => {\n  return `Ciaone ${req.jwt.username}!`\n}\n\nmodule.exports = compose(\n    jwtAuth(process.env.jwt_secret),\n    anotherWrapper,\n    analitycsWrapper,\n    redirectWrapper,\n    yetAnotherWrapper\n)(handle)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kandros/micro-jwt-auth.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "1.6.0"
}
