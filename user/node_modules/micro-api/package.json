{
  "_args": [
    [
      {
        "raw": "micro-api@^0.2.0",
        "scope": null,
        "escapedName": "micro-api",
        "name": "micro-api",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/home/software1/microservices/user"
    ]
  ],
  "_from": "micro-api@>=0.2.0 <0.3.0",
  "_id": "micro-api@0.2.0",
  "_inCache": true,
  "_location": "/micro-api",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/micro-api-0.2.0.tgz_1492925188279_0.26253128866665065"
  },
  "_npmUser": {
    "name": "possibilities",
    "email": "mikebannister@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "micro-api@^0.2.0",
    "scope": null,
    "escapedName": "micro-api",
    "name": "micro-api",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/micro-api/-/micro-api-0.2.0.tgz",
  "_shasum": "be6e845b25e2290dfa4109e031b2f43c43bcd3c1",
  "_shrinkwrap": null,
  "_spec": "micro-api@^0.2.0",
  "_where": "/home/software1/microservices/user",
  "author": {
    "name": "Mike Bannister",
    "email": "mikebannister@gmail.com"
  },
  "ava": {
    "failFast": true,
    "require": [
      "babel-register"
    ],
    "babel": "inherit"
  },
  "babel": {
    "presets": [
      "latest",
      "stage-0"
    ]
  },
  "bugs": {
    "url": "https://github.com/possibilities/micro-api/issues"
  },
  "dependencies": {
    "babel-polyfill": "^6.23.0",
    "path-match": "^1.2.4",
    "request": "^2.81.0",
    "request-promise": "^4.2.0",
    "standard": "^10.0.0"
  },
  "description": "Minimal routing layer for building JSON APIs with Zeit's Micro",
  "devDependencies": {
    "async-to-gen": "^1.3.0",
    "ava": "^0.19.0",
    "babel-cli": "^6.24.0",
    "babel-preset-latest": "^6.24.0",
    "babel-preset-stage-0": "^6.22.0",
    "babel-register": "^6.24.0",
    "micro": "^7.3.0",
    "rimraf": "^2.6.1",
    "test-listen": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "be6e845b25e2290dfa4109e031b2f43c43bcd3c1",
    "tarball": "https://registry.npmjs.org/micro-api/-/micro-api-0.2.0.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "lib/index.js"
  ],
  "gitHead": "14be68a0e8a96ef6661c04f3a2ea605a80b71718",
  "homepage": "https://github.com/possibilities/micro-api#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "possibilities",
      "email": "mikebannister@gmail.com"
    }
  ],
  "name": "micro-api",
  "optionalDependencies": {},
  "peerDependencies": {
    "micro": "^7.3.0"
  },
  "readme": "# Micro API\n\n### Summary\n\nMinimal routing layer for building JSON APIs with Zeit's [Micro](https://github.com/zeit/micro)\n\n[![CircleCI](https://circleci.com/gh/possibilities/micro-api.svg?style=svg)](https://circleci.com/gh/possibilities/micro-api)\n\n### Installation\n\n```javascript\nyarn add micro micro-api\n```\n\n### Usage\n\nDeclare your API's routes\n\n```javascript\n// index.js\nconst microApi = require('micro-api')\nconst handlers = require('./handlers')\n\nconst api = microApi([\n  {\n    method: 'post',\n    path: '/foos',\n    handler: handlers.createFoo,\n  },\n  {\n    method: 'get',\n    path: '/foos/:fooId',\n    handler: handlers.showFoo,\n  },\n])\n\nmodule.exports = api\n```\n\nDefine some micro-compatible handlers\n\n```javascript\n// handlers.js\nconst uuid = require('uuid')\n\n// In memory database\nconst foos = []\n\nconst createFoo = ({ body }) => {\n  // Build up the new item\n  const newFoo = { ...body, id: uuid() }\n  // Add it to the database\n  foos.push(newFoo)\n  return newFoo\n}\n\n// Find and return by id\nconst showFoo = ({ params: { fooId } }) => foos.find(f => f.id === fooId)\n\nmodule.exports = { createFoo, showFoo }\n```\n\n### Run\n\n```\nmicro -p 3000 ./index.js\n```\n\nSee [Micro](https://github.com/zeit/micro#documentation) documentation for complete usage.\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/possibilities/micro-api.git",
    "type": "git"
  },
  "scripts": {
    "build": "rimraf lib && babel src --out-dir lib",
    "dev": "ava --verbose --watch src/test.js",
    "lint": "standard",
    "prepublish": "yarn build",
    "pretest": "standard",
    "test": "ava --verbose src/test.js"
  },
  "version": "0.2.0"
}
